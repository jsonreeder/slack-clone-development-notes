#+TITLE: Snippets
* [2017-03-24 Fri]
* [2017-03-23 Thu]
** After today users will be able to
*** DONE Use the app in incognito
CLOSED: [2017-03-23 Thu 13:29]
*** DONE Use the app in safari
CLOSED: [2017-03-23 Thu 13:29]
*** DONE After navigating to a new channel, see new messages without refreshing
CLOSED: [2017-03-23 Thu 18:45]
*** DONE Use the app in firefox
CLOSED: [2017-03-23 Thu 18:45]
*** Smoothly add a new direct message
*** See no errors in the console
*** See a unique name
*** See a unique logo
*** See new pairs of guests
** My biggest bug ever
*** tl;dr
**** I hit a bug that was hard to reproduce
- See 'reproduce the bug' below
- The summary is that I would visit a channel and couldn't send any messages until I refreshed the page, at which point everything worked just fine. Except that sometimes I could send messages. In fact, for every message I sent, I would see it displayed twice!
- What was hard was that sometimes the bug was not happening. It was not possible to reproduce it perfectly. Sometimes no messages were sent. Sometimes multiple messages were sent.
**** I went through every possible contributing factor
- React-redux: could I be missing new props?
  - No, there were no lifecycle methods that solved the problem
- Actioncable (web sockets)
  - How many sockets were being created?
**** I stoppped the bug but started another
- By never removing a socket, I could always send messages, but they were being doubled up (as sockets accumulated)
**** In that process, I discovered something unexpected
- I would have expected this to create one new socket for every new channel I visited. Instead, it was creating two new sockets for every new channel
**** I investigated why that unexpected behavior was happening
- Since two sockets were /always/ being created (ie the bug was highly reproduceable), I had a clear problem to investigate
- I found that both a parent component and a child component were adding a socket
**** Solution
- Stop telling the child component to add a socket
*** reproducing the bug
- log in
- create a new dm
- send a chat
- it doesn't always show up, sometimes it shows up twice
- refresh the page
- it shows up (always just one copy of it)
**** notes
- checks rails log. is active job working?
- it works just fine joining new channels
*** steps to solve
**** DONE reproduce
CLOSED: [2017-03-23 Thu 10:41]
**** DONE check state
CLOSED: [2017-03-23 Thu 10:41]
- the message is not being loaded
- is the current channel being rendered?
**** DONE try quickfix
CLOSED: [2017-03-23 Thu 11:06]
***** quick success
#+BEGIN_SRC javascript
else if (newProps.params.forumName) {
  this.props.requestSingleForum(newProps.params.forumName);
}
#+END_SRC

- this solves the problem
- but it also makes continuous server requests
- this is sort of a cheap solution, because it is checking params (which are always available). Instead, I should be responding to a lifecycle method
**** DONE does it respond to any lifecycle methods?
CLOSED: [2017-03-23 Thu 11:06]
- when I send a message, is a console log fired from any lifecycle methods?
- no, so it must be a job firing thing
****** DONE componentWillReceiveProps - no
CLOSED: [2017-03-23 Thu 11:04]
****** DONE componentDidUpdate - no
CLOSED: [2017-03-23 Thu 11:05]
****** DONE componentDidMount - no
CLOSED: [2017-03-23 Thu 11:06]
**** DONE is the job firing?
CLOSED: [2017-03-23 Thu 11:14]
***** yes
****** the message is not showing up in the browser
****** but it is in the log
**** DONE This works fine joining a new channel (not dm). Is that the reason? - no
CLOSED: [2017-03-23 Thu 11:33]
***** Is there a difference between those forms?
- channels_index.jsx just creates a membership
- direct_message_fom creates a forum
***** But I don't think that this is the problem
- When I stopped the dm_form from redirecting and manually left the form after creating a new dm, then navigated to the new dm, the problem was still there
**** DONE is the data being received? - no
CLOSED: [2017-03-23 Thu 15:18]
added a console.log in forum_reducer and nothing was logged
***** What should be triggering the action? - the socket
added a console.log in root.jsx (add socket data received) and no data was received
***** Why isn't it?
****** DONE maybe the socket isn't connected - no
CLOSED: [2017-03-23 Thu 11:37]
- it is logging the right connection
****** DONE maybe the socket immediately disconnects - don't think so
CLOSED: [2017-03-23 Thu 11:37]
- not sure about this
- adding console.logs to the disconnect never logged anything while navigating around the entire site
****** maybe the socket is never tripped
- what should trip it? the job
******* DONE It is received by the job - yes
CLOSED: [2017-03-23 Thu 11:45]
added a debugger to message_broadcast_job, and the message showed up
******* Is it passing through the job?
******** DONE Does it get through the message partial - yes
CLOSED: [2017-03-23 Thu 11:50]
got to the debugger after that point
******** TODO what happens after the broadcast?
- got to the debugger after that point
- the message and forum look fine
- I think it has something to do with what happens during the broadcast
- QUESTION: From ~ActionCable.server.broadcast~ in ~message_broadcast_job~ where is the data sent? Is it sent to the socket added in ~root.jsx~ or is there a media step?
******* DONE Is there any difference between App when it's working and App when it's not? - no
CLOSED: [2017-03-23 Thu 12:03]
- I can't see any
******* Did I have this problem before introducing action cable?
**** SOLUTION nested routes
***** Is there a difference in the server logs?
****** When it's working
RoomChannel is transmitting the subscription confirmation
RoomChannel is streaming from channel_c-3po-luke-lyra-pantalaimon
****** With the bug
RoomChannel is streaming from channel_c-3po-lyra
RoomChannel stopped streaming from channel_undefined
RoomChannel stopped streaming from channel_c-3po-lyra

  Rendered api/forums/show.json.jbuilder (10.5ms)
Completed 200 OK in 161ms (Views: 18.4ms | ActiveRecord: 69.3ms)
***** Why is it different?
- Something is messing up the socket connections
***** What if I never remove the socket?
- Then the bug is fixed, but I send each message multiple times (since sockets pile up on top of each other)
- BUT, what I would expect is that we just get one new socket each time we go to a channel. Instead of that we're getting /two/ new sockets
***** So why are we getting two new sockets
- There was a nested component! Both it and its parent were running the onEnter hook and adding a socket. Removing the onEnter hook from the child fixed all the problems
*** cleanup
**** DONE turn automessage back on
CLOSED: [2017-03-23 Thu 15:38]
- forums_controller.rb
**** DONE remove console.logs in root.jsx
CLOSED: [2017-03-23 Thu 15:38]
**** remove console.log in forum_reducer
** My second biggest bug
- Still working on this one. Will add notes after solving
- The short story is that I'm getting a bug in production that I'm having trouble reproducing in development
* [2017-03-22 Wed]
** After today users will be able to
*** DONE Receive messages without refreshing
CLOSED: [2017-03-22 Wed 18:07]
*** Have a similar experience viewing the app in Chrome and Safari
*** Have a similar experience viewing the app in Chrome and Chrome Incognito
*** Have a similar experience viewing the app in Chrome and Firefox
** TIL
- Action cable!
- How to set up a very basic bot
- How to query an external api via a rails backend
** Thoughts
- After getting live chat to work, I got very motivated to add some more functionality
- The app has started to take shape, and I am having more of a sense for how I hope users will interact with it.
- I decided to nix the original plan of improving styling, and instead implement bots. I did this partially because I was excited and partially from the perspective of UX. I finally have a working chat app, but it's boring. There's not much you can do besides send messages. Bots are a simple way to /receive/ something of interest. If I can fill them out to be interactive, then they might even allow for interaction, which would be awesome.
- That was a lot of fun, though there are still some kinks to work out. None of the bots are interactive, which significantly minimizes their effect.
* [2017-03-21 Tue]
** After today users will be able to
*** DONE Start a direct message with one person
CLOSED: [2017-03-22 Wed 00:02]
*** DONE Start a direct message with multiple people
CLOSED: [2017-03-22 Wed 00:02]
*** DONE See well-formatted titles for direct messages
CLOSED: [2017-03-22 Wed 00:02]
*** DONE Scroll back through message history
CLOSED: [2017-03-22 Wed 00:02]
** Thoughts
- There are lots of small tasks that need to be done (as opposed to starting, when most of the todos were general). I've started a new file to organize them. The big challenge here is prioritization, followed by staying focused on making one set of changes at a time
- That was very helpful. The longer I've worked on the project, the more I've benefited from splitting my mind between planning and doing. When I'm starting to get groggy, it's best if I write out every step of what I want to do. Then I have something to reference to anchor my thinking.
- I accomplished all of my goals for the day!
* [2017-03-20 Mon]
** After today users will be able to
*** DONE See their message history on all channels
CLOSED: [2017-03-20 Mon 14:19]
*** DONE Send a new message
CLOSED: [2017-03-20 Mon 17:00]
*** Start a direct message with one person
*** Start a direct message with multiple people
** Thoughts
- I found myself getting a bit distracted yesterday. I would start working on a feature, and then would break off and change bits of another feature. To keep myself more focused, I kept task notes here organized by the feature branch name. This was effective. I found that I kept myself more focused to the feature I wanted to be making progress on.
- I'm very happy that I've taken a frontend-first approach, building out dummy views before plugging in any backend. It has meant that my app has looked pretty good at every stage. In other words, the features that are there look complete.
- Once again, was not able to hit all of my goals, but I'm happy with my progress for the day
** Tasks
*** DONE add-message-history
CLOSED: [2017-03-20 Mon 14:13]
**** DONE Add MessageHistory Component
CLOSED: [2017-03-20 Mon 10:13]
***** DONE Fill with fake data that shows in every view
CLOSED: [2017-03-20 Mon 10:13]
**** DONE Add backend
CLOSED: [2017-03-20 Mon 14:13]
***** DONE message model
CLOSED: [2017-03-20 Mon 10:28]
***** DONE Associations
CLOSED: [2017-03-20 Mon 10:45]
****** DONE Message has sender
CLOSED: [2017-03-20 Mon 10:31]
- Message.first.messageable
****** DONE Message has forum
CLOSED: [2017-03-20 Mon 10:30]
****** DONE User has messages
CLOSED: [2017-03-20 Mon 10:45]
****** DONE Forum has messages
CLOSED: [2017-03-20 Mon 10:37]
***** DONE Forums show (getting a forums messages)
CLOSED: [2017-03-20 Mon 10:56]
***** DONE messages controller
CLOSED: [2017-03-20 Mon 11:10]
**** DONE Add connection
CLOSED: [2017-03-20 Mon 14:13]
***** DONE Display previously sent messages
CLOSED: [2017-03-20 Mon 14:12]
*** DONE compose-message
CLOSED: [2017-03-20 Mon 17:00]
**** DONE api util
CLOSED: [2017-03-20 Mon 11:08]
successful test
#+BEGIN_SRC javascript
$.ajax({
  method: 'post',
  url: 'api/messages',
  data: {
    message: {
      forum_id: 31,
      body: 'Created in ajax!',
      messageable_type: 'User',
      messageable_id: 209
    }
  }
})
#+END_SRC
**** DONE View
CLOSED: [2017-03-20 Mon 16:01]
**** DONE Actions
CLOSED: [2017-03-20 Mon 17:00]
- Make channel links redirect to the view with details
- adjust border color, try typing a lot
*** direct-message
**** DONE Integrate with existing messages component
CLOSED: [2017-03-20 Mon 23:00]
***** DONE Add dm channels in rails console
CLOSED: [2017-03-20 Mon 17:53]
***** DONE Add dm channels in api (to test controller)
CLOSED: [2017-03-20 Mon 21:05]
#+BEGIN_SRC javascript
  $.ajax({
    method: 'post',
    url: 'api/forums',
    data: {
      forum: {
        current_user: "hannibal",
        other_users: ["clarice"]
      }
    }
  })

  $.ajax({
    method: 'post',
    url: 'api/forums',
    data: {
      forum: {
        current_user: "lyra",
        other_users: ["click", "clack"]
      }
    }
  })
#+END_SRC
***** DONE Add association to get channels vs dms
CLOSED: [2017-03-20 Mon 21:23]
***** DONE Remove placeholder
CLOSED: [2017-03-20 Mon 21:50]
***** DONE Display existing dms
CLOSED: [2017-03-20 Mon 21:50]
***** DONE Fix DM naming
CLOSED: [2017-03-20 Mon 21:56]
***** DONE Fix styling for going to DM
CLOSED: [2017-03-20 Mon 22:09]
***** WAIT Fix stying for current channel
***** WAIT Add minimum width to channel details
***** DONE Make sure the content in the individual dms looks okay
CLOSED: [2017-03-20 Mon 22:23]
***** DONE Seed some individual dms
CLOSED: [2017-03-20 Mon 22:56]
***** DONE Seed some group dms
CLOSED: [2017-03-20 Mon 22:56]
***** DONE Remove channel details button
CLOSED: [2017-03-20 Mon 22:25]
**** Update joining a channel
- Only be able to join a channel, not a dm
**** Add creation component
**** DONE Add
CLOSED: [2017-03-20 Mon 22:27]
- mario, luigi
- link, zelda
- simba, rafiki
- calvin, hobbes
- sherlock, watson
- winniethepooh, christopherrobin
- jekyll, hyde
* [2017-03-19 Sun]
** After today users will be able to
*** DONE See /only/ the channels they belong to
CLOSED: [2017-03-19 Sun 09:57]
*** DONE Show and hide the channel details view
CLOSED: [2017-03-19 Sun 22:17]
*** DONE Join a new channel
CLOSED: [2017-03-19 Sun 22:17]
*** Start a new direct message to one person
*** Start a new direct message to multiple people
*** See a history of their messages in channels and direct messages
*** See a responsive splash page
** Tasks
*** Forums
**** DONE Change channel display to only show channels that the user is a member in
CLOSED: [2017-03-19 Sun 10:02]
*** Details view
**** DONE Improve styling of ~details~ views
CLOSED: [2017-03-19 Sun 16:20]
**** DONE Make ~details~ view hideableable
CLOSED: [2017-03-19 Sun 16:20]
**** DONE Only display when at the correct url path (~details~)
CLOSED: [2017-03-19 Sun 16:20]
*** More Forums
**** DONE Allow users to create new memberships (join new channels)
CLOSED: [2017-03-19 Sun 21:48]
**** Add DMs
***** Add placeholder views
****** DMs index
****** Creating new DM page )similar to joining a new forum
***** Seed
***** Replace placeholder with data fetched from database
*** Messages
**** Add placeholder view for messages
**** Add messages table
**** Seed some data
**** Replace placeholder with data fetched from database
** Tough points
- Added a button to show/hide details view for a given message, but it doesn't force a page rerender. Wasn't able to figure out how to fix that.
- Adding the logic to create a new membership (in the channels index) was a lot of work, given that it is a many-to-many polymorphic association
- Got sucked into styling and distracted from some of the major goals I had set out to accomplish
* [2017-03-17 Fri] 
** After today users will be able to
*** DONE See the channels they belong to
CLOSED: [2017-03-18 Sat 17:04]
*** DONE See the other members of those channels
CLOSED: [2017-03-18 Sat 17:04]
*** Join a new channel
*** Start a new direct message to one person
*** Start a new direct message to multiple people
*** See a history of their messages in channels and direct messages
*** See a responsive splash page
** Tasks
*** DONE Add memberships
CLOSED: [2017-03-17 Fri 10:37]
*** Display memberships
**** DONE Display all users
CLOSED: [2017-03-17 Fri 15:09]
**** DONE Display users who are members in channel
CLOSED: [2017-03-17 Fri 15:09]
**** Change channel display to only show channels that the user is a member in
*** DMs
**** Prepare display of DM
**** Add DM forums to seeds
**** Display those DMs
*** Allow users to create new memberships
*** Allow users to create new channels (DMs)
*** Take another look at styling
** Thoughts
- A tough day. I did not finish components in the time that I had estimated. Friday.
- I significantly underestimated the amount of time that it would take me to build the forums (channels) component. The two factors that I underestimated there were (1) the fact that creating forums also meant creating the join table (memberships) and (2) the fact that to display the forums component (~/messages/:forumName~) I would have to build the main view of the entire application.
- The main problem here was estimation not productivity. I think I'm working at a reasonable pace and that my estimation was inaccurate.
- In general, I'm very happy that I've taken a user-centric view. Whenever possible, I've created views with dummy data before adding the backend to send the data. That has meant that after I finish adding in the backend it is very easy to plug it into the front end view that I've already made. It has allowed me to split concerns and focus on display separately from information. It has also meant that I almost always have a visual to /show/ for my work.
* [2017-03-16 Thu]
** After today users will be able to
- Seamlessly sign in as guests
- See the messages page
- See all the channels
** Tasks
*** DONE Improve guest sign in
    CLOSED: [2017-03-16 Thu 17:18]
- Address Heroku bug
- More than two guests
  - multiple maudes
  - or maybe a few guest users show up as options on the frontend (guest users currently in user are not available)
*** DONE Build massages component shell
    CLOSED: [2017-03-16 Thu 17:18]
*** DONE Add fora to database
    CLOSED: [2017-03-16 Thu 22:16]
*** DONE Display channels in messages component
    CLOSED: [2017-03-16 Thu 22:16]
** TIL
- On a flexed component, set height with ~vh~ not ~%~. ~100vh~ will fill the whole screen.
- Before running ~bundle installe~, stop the rails server. Otherwise new packages might not install.
** Short term
- Use forum name not id
* [2017-03-15 Wed]
** After today users will be able to
Enter the application by
- Clicking a button to log in as one of two guests
- Sign up as a new user
- Log in as a returning user
** Tasks
*** DONE Add Rack Livereload
CLOSED: [2017-03-15 Wed 09:26]
- https://gist.github.com/louisscruz/85d8d9e188455961134d26f1b5dda1ca
*** DONE Auth
CLOSED: [2017-03-15 Wed 23:34]
**** DONE Configure DB
CLOSED: [2017-03-15 Wed 09:59]
**** DONE Terminal
CLOSED: [2017-03-15 Wed 09:59]
**** DONE Console
CLOSED: [2017-03-15 Wed 14:38]
**** Browser guest
**** Browser log in
**** Browser sign up
** Thoughts
- Git flow is awesome! Had my first hotfix today (forgot to install lodash). Git flow made it super easy to manage the branching.
** TIL
- You can run ~heroku run bundle exec rake db:migrate~
- I had changed my db and needed to update them
- It was also helpful to run ~heroku run bundle exec rake db:seed~
* [2017-03-14 Tue]
** After today users will be able to
- Navigate to the site on any computer
- See something beautiful
** Tasks
*** DONE Hotfix proposal
CLOSED: [2017-03-14 Tue 14:42]
*** DONE React Hello World
CLOSED: [2017-03-14 Tue 16:01]
*** DONE Heroku
CLOSED: [2017-03-14 Tue 16:01]
*** DONE Start Styling conventions
CLOSED: [2017-03-14 Tue 23:03]
** TIL
*** Git rebasing
- Use ~fixup~ to remove old commit messages (instead of ~squash~)
** Resources
*** Git rebasing
- [[https://www.youtube.com/watch?v=2E23I9PzplM][video]]
*** Flex
- [[https://css-tricks.com/snippets/css/a-guide-to-flexbox/][tutorial]]
*** Color pickers
- [[http://www.colorcombos.com/][colorcombos]]
** Dead Ends
- I tried to start testing using Jest and Enzyme. I was able to write a successful simple test in ES5 syntax, but writing anything in ES6 syntax was throwing errors. I will have to postpone JavaScript testing.
