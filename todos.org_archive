#    -*- mode: org -*-


Archived entries from file /Users/Jason/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org


* DONE prevent-duplicate-dms
CLOSED: [2017-03-21 Tue 15:45]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 09:06
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Sort names on backend
CLOSED: [2017-03-21 Tue 15:15]
** DONE Test
CLOSED: [2017-03-21 Tue 15:23]
*** DONE With two
CLOSED: [2017-03-21 Tue 15:19]
is it alphabetical?
#+BEGIN_SRC javascript
$.ajax({
  method: 'post',
  url: 'api/forums',
  data: {
    forum: {
      current_user: "rosencrantz",
      other_users: ["hannibal"]
    }
  }
})
#+END_SRC
*** DONE With three
CLOSED: [2017-03-21 Tue 15:21]
Does it come out the same way both times?
**** First way
#+BEGIN_SRC javascript
$.ajax({
  method: 'post',
  url: 'api/forums',
  data: {
    forum: {
      current_user: "rosencrantz",
      other_users: ["hannibal", "clarice"]
    }
  }
})
#+END_SRC
**** Second way
#+BEGIN_SRC javascript
$.ajax({
  method: 'post',
  url: 'api/forums',
  data: {
    forum: {
      current_user: "hannibal",
      other_users: ["rosencrantz", "clarice"]
    }
  }
})
#+END_SRC
** DONE Make sure that controller does a no op if the channel already exists
CLOSED: [2017-03-21 Tue 15:23]
** DONE Try to create duplicate through ajax, make sure that it doesn't happen
CLOSED: [2017-03-21 Tue 15:23]
** DONE Double check form
CLOSED: [2017-03-21 Tue 15:43]
*** DONE Update the link
CLOSED: [2017-03-21 Tue 15:33]
*** DONE Reseed to make sure that I catch future errors
CLOSED: [2017-03-21 Tue 15:38]
*** DONE Delete unused code from form
CLOSED: [2017-03-21 Tue 15:43]
*** DONE Redirect to try not sign in 
CLOSED: [2017-03-21 Tue 15:39]

* DONE add-scrolling
CLOSED: [2017-03-22 Wed 09:06]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 09:06
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE to dm-creation
CLOSED: [2017-03-21 Tue 15:55]
** DONE to chat
CLOSED: [2017-03-21 Tue 17:21]

* DONE update-without-refreshing
CLOSED: [2017-03-22 Wed 09:06]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 09:06
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE correct chat order
CLOSED: [2017-03-21 Tue 17:30]
** DONE auto-update messages after sending one
CLOSED: [2017-03-21 Tue 18:45]
** DONE auto-update channels after joining
CLOSED: [2017-03-21 Tue 23:53]
*** DONE Receive membership after joining new channel
CLOSED: [2017-03-21 Tue 19:27]
*** DONE Make sure forums are getting into state correctly
CLOSED: [2017-03-21 Tue 19:48]
*** Receive membership after creating new DM
**** DONE Have requestAllForums return both channels and DMs
CLOSED: [2017-03-21 Tue 19:41]
**** DONE in handleCreateForum
CLOSED: [2017-03-21 Tue 23:25]
***** DONE Modify the current user's direct messages
CLOSED: [2017-03-21 Tue 20:40]
***** DONE Get the actual created channel
CLOSED: [2017-03-21 Tue 23:25]
- does this mean I have to do this elsewhere?
***** DONE Add back in the creation, but with new method
CLOSED: [2017-03-21 Tue 22:31]
***** DONE Make sure action has a forum
CLOSED: [2017-03-21 Tue 22:35]
***** DONE Why is this being called outside of creating a new dm?
CLOSED: [2017-03-21 Tue 23:25]
- A name collision! Fixed
***** DONE Append that forum to current users
CLOSED: [2017-03-21 Tue 22:56]
***** DONE Re-enable hash-history push to resultant link
CLOSED: [2017-03-21 Tue 22:56]
***** Scratch code
      this.props.createForum(currentUser, otherUsers);
      this.props.requestAllForums();

      let newUser = merge({}, currentUser);
      newUser.directMessages = ["horse"];
      this.props.updateDirectMessages(this.props.currentUser);


      this.props.addDirectMessage(currentUser, otherUsers);
      hashHistory.push(`/messages/${forumTitle}/details`);


  case ADD_DIRECT_MESSAGE:
    // console.log(state);
    // console.log("reducer firing");
    // console.log(action);
    let newUser = merge({}, action.currentUser);
    newUser.directMessages.push(action.newDirectMessage);
    // console.log(newUser);
    return newUser;
**** Correct the join new channel form
*** DONE Remove unused code
CLOSED: [2017-03-21 Tue 23:00]
- receive single membership
*** What happens when users have joined all channels?
*** DONE Address console error
CLOSED: [2017-03-21 Tue 23:53]

* DONE add-new-user-memberships
CLOSED: [2017-03-22 Wed 10:02]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 10:02
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Make sure channels are created before users
CLOSED: [2017-03-22 Wed 09:41]
** DONE Add to messages controller
CLOSED: [2017-03-22 Wed 09:54]
** DONE Try in terminal
CLOSED: [2017-03-22 Wed 09:54]
** DONE Try in browser
CLOSED: [2017-03-22 Wed 09:55]
** DONE Remove memberships in seed
CLOSED: [2017-03-22 Wed 09:57]
** DONE Make sure that it doesn't error out if seed order is wrong
CLOSED: [2017-03-22 Wed 09:59]
** DONE Add seeds
CLOSED: [2017-03-22 Wed 10:01]
*** napoleon, pedro

* DONE prepare for live chat
CLOSED: [2017-03-22 Wed 12:05]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 12:05
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Do the tutorial elsewhere
CLOSED: [2017-03-22 Wed 12:05]
[[https://www.youtube.com/watch?v=n0WUjGkDFS0][DHH tutorial]]
** DONE Compare tutorial to other instructions
CLOSED: [2017-03-22 Wed 12:05]

* DONE add-live-chat
CLOSED: [2017-03-22 Wed 18:07]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 18:07
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE enable action cable
CLOSED: [2017-03-22 Wed 12:10]
** DONE make speak do something
CLOSED: [2017-03-22 Wed 12:14]
** DONE allow input from page
CLOSED: [2017-03-22 Wed 13:40]
** DONE persist to db
CLOSED: [2017-03-22 Wed 15:18]
*** DONE Copy code example
CLOSED: [2017-03-22 Wed 13:41]
*** DONE Add ID to DOM for rendering area
CLOSED: [2017-03-22 Wed 13:46]
**** DONE messages.jsx
CLOSED: [2017-03-22 Wed 13:46]
 id="message-history-container"
**** DONE room.coffee
CLOSED: [2017-03-22 Wed 13:46]
*** DONE Correct message params
CLOSED: [2017-03-22 Wed 14:37]
**** DONE room_channel.rb
CLOSED: [2017-03-22 Wed 14:10]
- changed 'content' to 'body'
- added filler data to complete the request
**** DONE message_broadcast_job.rb
CLOSED: [2017-03-22 Wed 14:10]
**** DONE porting example code
CLOSED: [2017-03-22 Wed 14:10]
***** what is the param?
- come back to this. Louis used :channel_name, but this isn't in my params. I only have :channel
*** Update root.jsx
**** DONE refactor to class component
CLOSED: [2017-03-22 Wed 14:37]
**** add in methods
** DONE Append to dom
CLOSED: [2017-03-22 Wed 17:25]
*** Notes
- My situation right now is that I can create messages and save to the db via
  - The compose message form
    - By typing into the form
  - The console
    - App.room.speak("arma virumque cano")
- This proves that action cable has taken over the act of creating messages
*** DONE Is the job being run?
CLOSED: [2017-03-22 Wed 15:24]
- No, it is not.
*** DONE Make sure that MessageBroadcastJob fires
CLOSED: [2017-03-22 Wed 15:28]
- Made it fire by adding the missing argument to ~message.rb~ (channel_id)
- The message info is just spot on. It's clearly the created message
- Now I should just need to receive it
*** DONE How do I receive the data after creation?
CLOSED: [2017-03-22 Wed 17:24]
- Start by sending an alert
  [2017-03-22 Wed]
*** DONE Remove placeholder
CLOSED: [2017-03-22 Wed 17:24]
- Now all messages are being created with dummy data
** DONE notes
CLOSED: [2017-03-22 Wed 17:25]

- I'll have to come back to ~room_channel.rb~ to specify which channel
** DONE Clean up console logs
CLOSED: [2017-03-22 Wed 17:27]
** DONE Allow hitting enter with no text
CLOSED: [2017-03-22 Wed 17:30]
** DONE Prep to configure heroku
CLOSED: [2017-03-22 Wed 18:07]
** DONE Rebase
CLOSED: [2017-03-22 Wed 18:07]

* DONE add bots
CLOSED: [2017-03-22 Wed 20:42]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 22:03
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Generate a bot message in the console
CLOSED: [2017-03-22 Wed 19:54]
Message.bot_message
** DONE Make sure that the message shows up in channels
CLOSED: [2017-03-22 Wed 19:54]
** DONE Do this via a job
CLOSED: [2017-03-22 Wed 20:24]
*** DONE Create job
CLOSED: [2017-03-22 Wed 19:59]
*** DONE Schedule job (in forums view)
CLOSED: [2017-03-22 Wed 20:02]
** DONE Say something interesting
CLOSED: [2017-03-22 Wed 20:15]
** DONE Add bot users
CLOSED: [2017-03-22 Wed 20:24]
** DONE Have the bot say hello to general
CLOSED: [2017-03-22 Wed 20:30]
** DONE Do this in a seed
CLOSED: [2017-03-22 Wed 20:42]
*** Create thorpbot
*** Have thorpbot member all new users

* DONE add greeting flow
CLOSED: [2017-03-22 Wed 22:31]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 22:31
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE change bots to message from 'bot.rb'
CLOSED: [2017-03-22 Wed 22:31]
*** DONE test in console
CLOSED: [2017-03-22 Wed 22:08]
*** DONE test with action
CLOSED: [2017-03-22 Wed 22:17]
*** DONE change seeds
CLOSED: [2017-03-22 Wed 22:27]
*** DONE make sure seeds worked
CLOSED: [2017-03-22 Wed 22:27]
*** DONE Redirect to this on signin
CLOSED: [2017-03-22 Wed 22:30]
** DONE messages to send to any user that signs in
CLOSED: [2017-03-22 Wed 22:31]
- Hey, welcome to Thorp
- I'm thorpbot
- I see you've chosen #{harold}. Nice!
- Wondering what to do? Here are my favorite things
- You could open up the app in a different browser (or incognito), pick another personality, and chat back and forth
- You could say hi to one of the other bots. Maybe they'll teach you something interesting.
- If you're really bored, you could read about this app!
** DONE hardcode message
CLOSED: [2017-03-22 Wed 22:31]

* DONE add cat facts
CLOSED: [2017-03-22 Wed 23:21]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 23:21
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** add backend
- sends cat facts to general channel
** add bot
** add instruction to check it out in welcome script
** seed

* DONE support chrome-incognito
CLOSED: [2017-03-23 Thu 09:20]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 09:20
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** install font

* DONE support safari
CLOSED: [2017-03-23 Thu 09:29]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 09:29
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** make chat history window height 100%
** double check that it still works in Chrome

* DONE set general as default
CLOSED: [2017-03-23 Thu 10:35]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 10:35
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:

* DONE display-messages-to-new-dms
CLOSED: [2017-03-23 Thu 15:45]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 15:45
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** tl;dr
*** I hit a bug that was hard to reproduce
- See 'reproduce the bug' below
- The summary is that I would visit a channel and couldn't send any messages until I refreshed the page, at which point everything worked just fine. Except that sometimes I could send messages. In fact, for every message I sent, I would see it displayed twice!
- What was hard was that sometimes the bug was not happening. It was not possible to reproduce it perfectly. Sometimes no messages were sent. Sometimes multiple messages were sent.
*** I went through every possible contributing factor
- React-redux: could I be missing new props?
  - No, there were no lifecycle methods that solved the problem
- Actioncable (web sockets)
  - How many sockets were being created?
*** I stoppped the bug but started another
- By never removing a socket, I could always send messages, but they were being doubled up (as sockets accumulated)
*** In that process, I discovered something unexpected
- I would have expected this to create one new socket for every new channel I visited. Instead, it was creating two new sockets for every new channel
*** I investigated why that unexpected behavior was happening
- Since two sockets were /always/ being created (ie the bug was highly reproduceable), I had a clear problem to investigate
- I found that both a parent component and a child component were adding a socket
*** Solution
- Stop telling the child component to add a socket
** reproducing the bug
- log in
- create a new dm
- send a chat
- it doesn't always show up, sometimes it shows up twice
- refresh the page
- it shows up (always just one copy of it)
*** notes
- checks rails log. is active job working?
- it works just fine joining new channels
** steps to solve
*** DONE reproduce
CLOSED: [2017-03-23 Thu 10:41]
*** DONE check state
CLOSED: [2017-03-23 Thu 10:41]
- the message is not being loaded
- is the current channel being rendered?
*** DONE try quickfix
CLOSED: [2017-03-23 Thu 11:06]
**** quick success
#+BEGIN_SRC javascript
else if (newProps.params.forumName) {
  this.props.requestSingleForum(newProps.params.forumName);
}
#+END_SRC

- this solves the problem
- but it also makes continuous server requests
- this is sort of a cheap solution, because it is checking params (which are always available). Instead, I should be responding to a lifecycle method
*** DONE does it respond to any lifecycle methods?
CLOSED: [2017-03-23 Thu 11:06]
- when I send a message, is a console log fired from any lifecycle methods?
- no, so it must be a job firing thing
***** DONE componentWillReceiveProps - no
CLOSED: [2017-03-23 Thu 11:04]
***** DONE componentDidUpdate - no
CLOSED: [2017-03-23 Thu 11:05]
***** DONE componentDidMount - no
CLOSED: [2017-03-23 Thu 11:06]
*** DONE is the job firing?
CLOSED: [2017-03-23 Thu 11:14]
**** yes
***** the message is not showing up in the browser
***** but it is in the log
*** DONE This works fine joining a new channel (not dm). Is that the reason? - no
CLOSED: [2017-03-23 Thu 11:33]
**** Is there a difference between those forms?
- channels_index.jsx just creates a membership
- direct_message_fom creates a forum
**** But I don't think that this is the problem
- When I stopped the dm_form from redirecting and manually left the form after creating a new dm, then navigated to the new dm, the problem was still there
*** DONE is the data being received? - no
CLOSED: [2017-03-23 Thu 15:18]
added a console.log in forum_reducer and nothing was logged
**** What should be triggering the action? - the socket
added a console.log in root.jsx (add socket data received) and no data was received
**** Why isn't it?
***** DONE maybe the socket isn't connected - no
CLOSED: [2017-03-23 Thu 11:37]
- it is logging the right connection
***** DONE maybe the socket immediately disconnects - don't think so
CLOSED: [2017-03-23 Thu 11:37]
- not sure about this
- adding console.logs to the disconnect never logged anything while navigating around the entire site
***** maybe the socket is never tripped
- what should trip it? the job
****** DONE It is received by the job - yes
CLOSED: [2017-03-23 Thu 11:45]
added a debugger to message_broadcast_job, and the message showed up
****** Is it passing through the job?
******* DONE Does it get through the message partial - yes
CLOSED: [2017-03-23 Thu 11:50]
got to the debugger after that point
******* TODO what happens after the broadcast?
- got to the debugger after that point
- the message and forum look fine
- I think it has something to do with what happens during the broadcast
- QUESTION: From ~ActionCable.server.broadcast~ in ~message_broadcast_job~ where is the data sent? Is it sent to the socket added in ~root.jsx~ or is there a media step?
****** DONE Is there any difference between App when it's working and App when it's not? - no
CLOSED: [2017-03-23 Thu 12:03]
- I can't see any
****** Did I have this problem before introducing action cable?
*** SOLUTION nested routes
**** Is there a difference in the server logs?
***** When it's working
RoomChannel is transmitting the subscription confirmation
RoomChannel is streaming from channel_c-3po-luke-lyra-pantalaimon
***** With the bug
RoomChannel is streaming from channel_c-3po-lyra
RoomChannel stopped streaming from channel_undefined
RoomChannel stopped streaming from channel_c-3po-lyra

  Rendered api/forums/show.json.jbuilder (10.5ms)
Completed 200 OK in 161ms (Views: 18.4ms | ActiveRecord: 69.3ms)
**** Why is it different?
- Something is messing up the socket connections
**** What if I never remove the socket?
- Then the bug is fixed, but I send each message multiple times (since sockets pile up on top of each other)
- BUT, what I would expect is that we just get one new socket each time we go to a channel. Instead of that we're getting /two/ new sockets
**** So why are we getting two new sockets
- There was a nested component! Both it and its parent were running the onEnter hook and adding a socket. Removing the onEnter hook from the child fixed all the problems
** cleanup
*** DONE turn automessage back on
CLOSED: [2017-03-23 Thu 15:38]
- forums_controller.rb
*** DONE remove console.logs in root.jsx
CLOSED: [2017-03-23 Thu 15:38]
*** remove console.log in forum_reducer

* DONE push to heroku test
CLOSED: [2017-03-23 Thu 15:56]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 15:56
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** browser support
** live chat bug

* DONE refactor-flex
CLOSED: [2017-03-23 Thu 18:28]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 18:28
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE start a new scss file for all flex
CLOSED: [2017-03-23 Thu 17:13]
** DONE port all old flex (for messages) to that file
CLOSED: [2017-03-23 Thu 17:13]
** DONE turn off absolute elements
CLOSED: [2017-03-23 Thu 17:28]
** DONE get the alignment correct
CLOSED: [2017-03-23 Thu 17:29]
** DONE start from the top reflexing
CLOSED: [2017-03-23 Thu 18:28]
** DONE cleanup
CLOSED: [2017-03-23 Thu 18:28]
- uncomment overflow in messages.jsx

* DONE Address regular errors
CLOSED: [2017-03-23 Thu 20:01]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 20:01
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE conditional in receive single message
CLOSED: [2017-03-23 Thu 19:48]
** DONE Follow steps for removing standard errors
CLOSED: [2017-03-23 Thu 20:01]

* DONE weird messages bug
CLOSED: [2017-03-23 Thu 20:24]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 20:24
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
- Uncaught TypeError: Cannot read property 'messages' of undefined
** reproduce
- start a new dm
- everything looks fine, but there's an error in the console
** ideas
- could it be thorpbot?

* DONE push to heroku
CLOSED: [2017-03-23 Thu 20:24]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 20:24
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** look for bugs
*** DONE try putting a capital in the username
CLOSED: [2017-03-23 Thu 20:24]

* DONE creating a new dm returns a 500
CLOSED: [2017-03-23 Thu 22:36]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 22:36
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
- https://slack-copy.herokuapp.com/#/messages/c-3po-jason/details
- could be thorpbot trying to say hi before anything happens
  - because the server is slow
** DONE Why am I requesting all forums in messages?
CLOSED: [2017-03-23 Thu 20:43]
- don't think this is necessary
- removed
** DONE Make sure creating a new channel still works
CLOSED: [2017-03-23 Thu 20:50]
*** Only request channels when creating a new channel
** Make sure creating a new dm still works
*** trying to 'recreate' a dm returns an error
- and doesn't redirect
**** looks like the dm that's added isn't added correctly
**** looks like the logic should be different for receiving a new forum than for receiving the current forum
**** create a new action - receive_new_forum
- or does it need to be session action since it's in the current user?
*** trying to 'recreate' the dm that we were last on returns a typeerror
** Git troubles
- I had it working without errors, then pushed to Heroku and then there were errors.
- When I checked on the local copy there were errors
- I checked out the commit before the hotfix and everything was fine
- Was it not merged in correctly?
*** Working commit: c2a7817
*** I think there are problems with merging
*** This is taking me a long time and is difficult
*** I fixed the problem once, I can fix it again
*** Work on develop, reset back
*** Fix the problems again
*** merge it into master
*** don't use git flow for the merge

* DONE simple error
CLOSED: [2017-03-23 Thu 23:14]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 23:14
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
- when users try to visit a dm that already exists, don't create it
** throw an error if the channel is not created
