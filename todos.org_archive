#    -*- mode: org -*-


Archived entries from file /Users/Jason/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org


* DONE prevent-duplicate-dms
CLOSED: [2017-03-21 Tue 15:45]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 09:06
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Sort names on backend
CLOSED: [2017-03-21 Tue 15:15]
** DONE Test
CLOSED: [2017-03-21 Tue 15:23]
*** DONE With two
CLOSED: [2017-03-21 Tue 15:19]
is it alphabetical?
#+BEGIN_SRC javascript
$.ajax({
  method: 'post',
  url: 'api/forums',
  data: {
    forum: {
      current_user: "rosencrantz",
      other_users: ["hannibal"]
    }
  }
})
#+END_SRC
*** DONE With three
CLOSED: [2017-03-21 Tue 15:21]
Does it come out the same way both times?
**** First way
#+BEGIN_SRC javascript
$.ajax({
  method: 'post',
  url: 'api/forums',
  data: {
    forum: {
      current_user: "rosencrantz",
      other_users: ["hannibal", "clarice"]
    }
  }
})
#+END_SRC
**** Second way
#+BEGIN_SRC javascript
$.ajax({
  method: 'post',
  url: 'api/forums',
  data: {
    forum: {
      current_user: "hannibal",
      other_users: ["rosencrantz", "clarice"]
    }
  }
})
#+END_SRC
** DONE Make sure that controller does a no op if the channel already exists
CLOSED: [2017-03-21 Tue 15:23]
** DONE Try to create duplicate through ajax, make sure that it doesn't happen
CLOSED: [2017-03-21 Tue 15:23]
** DONE Double check form
CLOSED: [2017-03-21 Tue 15:43]
*** DONE Update the link
CLOSED: [2017-03-21 Tue 15:33]
*** DONE Reseed to make sure that I catch future errors
CLOSED: [2017-03-21 Tue 15:38]
*** DONE Delete unused code from form
CLOSED: [2017-03-21 Tue 15:43]
*** DONE Redirect to try not sign in 
CLOSED: [2017-03-21 Tue 15:39]

* DONE add-scrolling
CLOSED: [2017-03-22 Wed 09:06]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 09:06
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE to dm-creation
CLOSED: [2017-03-21 Tue 15:55]
** DONE to chat
CLOSED: [2017-03-21 Tue 17:21]

* DONE update-without-refreshing
CLOSED: [2017-03-22 Wed 09:06]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 09:06
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE correct chat order
CLOSED: [2017-03-21 Tue 17:30]
** DONE auto-update messages after sending one
CLOSED: [2017-03-21 Tue 18:45]
** DONE auto-update channels after joining
CLOSED: [2017-03-21 Tue 23:53]
*** DONE Receive membership after joining new channel
CLOSED: [2017-03-21 Tue 19:27]
*** DONE Make sure forums are getting into state correctly
CLOSED: [2017-03-21 Tue 19:48]
*** Receive membership after creating new DM
**** DONE Have requestAllForums return both channels and DMs
CLOSED: [2017-03-21 Tue 19:41]
**** DONE in handleCreateForum
CLOSED: [2017-03-21 Tue 23:25]
***** DONE Modify the current user's direct messages
CLOSED: [2017-03-21 Tue 20:40]
***** DONE Get the actual created channel
CLOSED: [2017-03-21 Tue 23:25]
- does this mean I have to do this elsewhere?
***** DONE Add back in the creation, but with new method
CLOSED: [2017-03-21 Tue 22:31]
***** DONE Make sure action has a forum
CLOSED: [2017-03-21 Tue 22:35]
***** DONE Why is this being called outside of creating a new dm?
CLOSED: [2017-03-21 Tue 23:25]
- A name collision! Fixed
***** DONE Append that forum to current users
CLOSED: [2017-03-21 Tue 22:56]
***** DONE Re-enable hash-history push to resultant link
CLOSED: [2017-03-21 Tue 22:56]
***** Scratch code
      this.props.createForum(currentUser, otherUsers);
      this.props.requestAllForums();

      let newUser = merge({}, currentUser);
      newUser.directMessages = ["horse"];
      this.props.updateDirectMessages(this.props.currentUser);


      this.props.addDirectMessage(currentUser, otherUsers);
      hashHistory.push(`/messages/${forumTitle}/details`);


  case ADD_DIRECT_MESSAGE:
    // console.log(state);
    // console.log("reducer firing");
    // console.log(action);
    let newUser = merge({}, action.currentUser);
    newUser.directMessages.push(action.newDirectMessage);
    // console.log(newUser);
    return newUser;
**** Correct the join new channel form
*** DONE Remove unused code
CLOSED: [2017-03-21 Tue 23:00]
- receive single membership
*** What happens when users have joined all channels?
*** DONE Address console error
CLOSED: [2017-03-21 Tue 23:53]

* DONE add-new-user-memberships
CLOSED: [2017-03-22 Wed 10:02]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 10:02
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Make sure channels are created before users
CLOSED: [2017-03-22 Wed 09:41]
** DONE Add to messages controller
CLOSED: [2017-03-22 Wed 09:54]
** DONE Try in terminal
CLOSED: [2017-03-22 Wed 09:54]
** DONE Try in browser
CLOSED: [2017-03-22 Wed 09:55]
** DONE Remove memberships in seed
CLOSED: [2017-03-22 Wed 09:57]
** DONE Make sure that it doesn't error out if seed order is wrong
CLOSED: [2017-03-22 Wed 09:59]
** DONE Add seeds
CLOSED: [2017-03-22 Wed 10:01]
*** napoleon, pedro

* DONE prepare for live chat
CLOSED: [2017-03-22 Wed 12:05]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 12:05
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Do the tutorial elsewhere
CLOSED: [2017-03-22 Wed 12:05]
[[https://www.youtube.com/watch?v=n0WUjGkDFS0][DHH tutorial]]
** DONE Compare tutorial to other instructions
CLOSED: [2017-03-22 Wed 12:05]

* DONE add-live-chat
CLOSED: [2017-03-22 Wed 18:07]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 18:07
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE enable action cable
CLOSED: [2017-03-22 Wed 12:10]
** DONE make speak do something
CLOSED: [2017-03-22 Wed 12:14]
** DONE allow input from page
CLOSED: [2017-03-22 Wed 13:40]
** DONE persist to db
CLOSED: [2017-03-22 Wed 15:18]
*** DONE Copy code example
CLOSED: [2017-03-22 Wed 13:41]
*** DONE Add ID to DOM for rendering area
CLOSED: [2017-03-22 Wed 13:46]
**** DONE messages.jsx
CLOSED: [2017-03-22 Wed 13:46]
 id="message-history-container"
**** DONE room.coffee
CLOSED: [2017-03-22 Wed 13:46]
*** DONE Correct message params
CLOSED: [2017-03-22 Wed 14:37]
**** DONE room_channel.rb
CLOSED: [2017-03-22 Wed 14:10]
- changed 'content' to 'body'
- added filler data to complete the request
**** DONE message_broadcast_job.rb
CLOSED: [2017-03-22 Wed 14:10]
**** DONE porting example code
CLOSED: [2017-03-22 Wed 14:10]
***** what is the param?
- come back to this. Louis used :channel_name, but this isn't in my params. I only have :channel
*** Update root.jsx
**** DONE refactor to class component
CLOSED: [2017-03-22 Wed 14:37]
**** add in methods
** DONE Append to dom
CLOSED: [2017-03-22 Wed 17:25]
*** Notes
- My situation right now is that I can create messages and save to the db via
  - The compose message form
    - By typing into the form
  - The console
    - App.room.speak("arma virumque cano")
- This proves that action cable has taken over the act of creating messages
*** DONE Is the job being run?
CLOSED: [2017-03-22 Wed 15:24]
- No, it is not.
*** DONE Make sure that MessageBroadcastJob fires
CLOSED: [2017-03-22 Wed 15:28]
- Made it fire by adding the missing argument to ~message.rb~ (channel_id)
- The message info is just spot on. It's clearly the created message
- Now I should just need to receive it
*** DONE How do I receive the data after creation?
CLOSED: [2017-03-22 Wed 17:24]
- Start by sending an alert
  [2017-03-22 Wed]
*** DONE Remove placeholder
CLOSED: [2017-03-22 Wed 17:24]
- Now all messages are being created with dummy data
** DONE notes
CLOSED: [2017-03-22 Wed 17:25]

- I'll have to come back to ~room_channel.rb~ to specify which channel
** DONE Clean up console logs
CLOSED: [2017-03-22 Wed 17:27]
** DONE Allow hitting enter with no text
CLOSED: [2017-03-22 Wed 17:30]
** DONE Prep to configure heroku
CLOSED: [2017-03-22 Wed 18:07]
** DONE Rebase
CLOSED: [2017-03-22 Wed 18:07]

* DONE add bots
CLOSED: [2017-03-22 Wed 20:42]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 22:03
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Generate a bot message in the console
CLOSED: [2017-03-22 Wed 19:54]
Message.bot_message
** DONE Make sure that the message shows up in channels
CLOSED: [2017-03-22 Wed 19:54]
** DONE Do this via a job
CLOSED: [2017-03-22 Wed 20:24]
*** DONE Create job
CLOSED: [2017-03-22 Wed 19:59]
*** DONE Schedule job (in forums view)
CLOSED: [2017-03-22 Wed 20:02]
** DONE Say something interesting
CLOSED: [2017-03-22 Wed 20:15]
** DONE Add bot users
CLOSED: [2017-03-22 Wed 20:24]
** DONE Have the bot say hello to general
CLOSED: [2017-03-22 Wed 20:30]
** DONE Do this in a seed
CLOSED: [2017-03-22 Wed 20:42]
*** Create thorpbot
*** Have thorpbot member all new users

* DONE add greeting flow
CLOSED: [2017-03-22 Wed 22:31]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 22:31
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE change bots to message from 'bot.rb'
CLOSED: [2017-03-22 Wed 22:31]
*** DONE test in console
CLOSED: [2017-03-22 Wed 22:08]
*** DONE test with action
CLOSED: [2017-03-22 Wed 22:17]
*** DONE change seeds
CLOSED: [2017-03-22 Wed 22:27]
*** DONE make sure seeds worked
CLOSED: [2017-03-22 Wed 22:27]
*** DONE Redirect to this on signin
CLOSED: [2017-03-22 Wed 22:30]
** DONE messages to send to any user that signs in
CLOSED: [2017-03-22 Wed 22:31]
- Hey, welcome to Thorp
- I'm thorpbot
- I see you've chosen #{harold}. Nice!
- Wondering what to do? Here are my favorite things
- You could open up the app in a different browser (or incognito), pick another personality, and chat back and forth
- You could say hi to one of the other bots. Maybe they'll teach you something interesting.
- If you're really bored, you could read about this app!
** DONE hardcode message
CLOSED: [2017-03-22 Wed 22:31]

* DONE add cat facts
CLOSED: [2017-03-22 Wed 23:21]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-22 Wed 23:21
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** add backend
- sends cat facts to general channel
** add bot
** add instruction to check it out in welcome script
** seed

* DONE support chrome-incognito
CLOSED: [2017-03-23 Thu 09:20]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 09:20
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** install font

* DONE support safari
CLOSED: [2017-03-23 Thu 09:29]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 09:29
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** make chat history window height 100%
** double check that it still works in Chrome

* DONE set general as default
CLOSED: [2017-03-23 Thu 10:35]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 10:35
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:

* DONE display-messages-to-new-dms
CLOSED: [2017-03-23 Thu 15:45]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 15:45
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** tl;dr
*** I hit a bug that was hard to reproduce
- See 'reproduce the bug' below
- The summary is that I would visit a channel and couldn't send any messages until I refreshed the page, at which point everything worked just fine. Except that sometimes I could send messages. In fact, for every message I sent, I would see it displayed twice!
- What was hard was that sometimes the bug was not happening. It was not possible to reproduce it perfectly. Sometimes no messages were sent. Sometimes multiple messages were sent.
*** I went through every possible contributing factor
- React-redux: could I be missing new props?
  - No, there were no lifecycle methods that solved the problem
- Actioncable (web sockets)
  - How many sockets were being created?
*** I stoppped the bug but started another
- By never removing a socket, I could always send messages, but they were being doubled up (as sockets accumulated)
*** In that process, I discovered something unexpected
- I would have expected this to create one new socket for every new channel I visited. Instead, it was creating two new sockets for every new channel
*** I investigated why that unexpected behavior was happening
- Since two sockets were /always/ being created (ie the bug was highly reproduceable), I had a clear problem to investigate
- I found that both a parent component and a child component were adding a socket
*** Solution
- Stop telling the child component to add a socket
** reproducing the bug
- log in
- create a new dm
- send a chat
- it doesn't always show up, sometimes it shows up twice
- refresh the page
- it shows up (always just one copy of it)
*** notes
- checks rails log. is active job working?
- it works just fine joining new channels
** steps to solve
*** DONE reproduce
CLOSED: [2017-03-23 Thu 10:41]
*** DONE check state
CLOSED: [2017-03-23 Thu 10:41]
- the message is not being loaded
- is the current channel being rendered?
*** DONE try quickfix
CLOSED: [2017-03-23 Thu 11:06]
**** quick success
#+BEGIN_SRC javascript
else if (newProps.params.forumName) {
  this.props.requestSingleForum(newProps.params.forumName);
}
#+END_SRC

- this solves the problem
- but it also makes continuous server requests
- this is sort of a cheap solution, because it is checking params (which are always available). Instead, I should be responding to a lifecycle method
*** DONE does it respond to any lifecycle methods?
CLOSED: [2017-03-23 Thu 11:06]
- when I send a message, is a console log fired from any lifecycle methods?
- no, so it must be a job firing thing
***** DONE componentWillReceiveProps - no
CLOSED: [2017-03-23 Thu 11:04]
***** DONE componentDidUpdate - no
CLOSED: [2017-03-23 Thu 11:05]
***** DONE componentDidMount - no
CLOSED: [2017-03-23 Thu 11:06]
*** DONE is the job firing?
CLOSED: [2017-03-23 Thu 11:14]
**** yes
***** the message is not showing up in the browser
***** but it is in the log
*** DONE This works fine joining a new channel (not dm). Is that the reason? - no
CLOSED: [2017-03-23 Thu 11:33]
**** Is there a difference between those forms?
- channels_index.jsx just creates a membership
- direct_message_fom creates a forum
**** But I don't think that this is the problem
- When I stopped the dm_form from redirecting and manually left the form after creating a new dm, then navigated to the new dm, the problem was still there
*** DONE is the data being received? - no
CLOSED: [2017-03-23 Thu 15:18]
added a console.log in forum_reducer and nothing was logged
**** What should be triggering the action? - the socket
added a console.log in root.jsx (add socket data received) and no data was received
**** Why isn't it?
***** DONE maybe the socket isn't connected - no
CLOSED: [2017-03-23 Thu 11:37]
- it is logging the right connection
***** DONE maybe the socket immediately disconnects - don't think so
CLOSED: [2017-03-23 Thu 11:37]
- not sure about this
- adding console.logs to the disconnect never logged anything while navigating around the entire site
***** maybe the socket is never tripped
- what should trip it? the job
****** DONE It is received by the job - yes
CLOSED: [2017-03-23 Thu 11:45]
added a debugger to message_broadcast_job, and the message showed up
****** Is it passing through the job?
******* DONE Does it get through the message partial - yes
CLOSED: [2017-03-23 Thu 11:50]
got to the debugger after that point
******* TODO what happens after the broadcast?
- got to the debugger after that point
- the message and forum look fine
- I think it has something to do with what happens during the broadcast
- QUESTION: From ~ActionCable.server.broadcast~ in ~message_broadcast_job~ where is the data sent? Is it sent to the socket added in ~root.jsx~ or is there a media step?
****** DONE Is there any difference between App when it's working and App when it's not? - no
CLOSED: [2017-03-23 Thu 12:03]
- I can't see any
****** Did I have this problem before introducing action cable?
*** SOLUTION nested routes
**** Is there a difference in the server logs?
***** When it's working
RoomChannel is transmitting the subscription confirmation
RoomChannel is streaming from channel_c-3po-luke-lyra-pantalaimon
***** With the bug
RoomChannel is streaming from channel_c-3po-lyra
RoomChannel stopped streaming from channel_undefined
RoomChannel stopped streaming from channel_c-3po-lyra

  Rendered api/forums/show.json.jbuilder (10.5ms)
Completed 200 OK in 161ms (Views: 18.4ms | ActiveRecord: 69.3ms)
**** Why is it different?
- Something is messing up the socket connections
**** What if I never remove the socket?
- Then the bug is fixed, but I send each message multiple times (since sockets pile up on top of each other)
- BUT, what I would expect is that we just get one new socket each time we go to a channel. Instead of that we're getting /two/ new sockets
**** So why are we getting two new sockets
- There was a nested component! Both it and its parent were running the onEnter hook and adding a socket. Removing the onEnter hook from the child fixed all the problems
** cleanup
*** DONE turn automessage back on
CLOSED: [2017-03-23 Thu 15:38]
- forums_controller.rb
*** DONE remove console.logs in root.jsx
CLOSED: [2017-03-23 Thu 15:38]
*** remove console.log in forum_reducer

* DONE push to heroku test
CLOSED: [2017-03-23 Thu 15:56]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 15:56
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** browser support
** live chat bug

* DONE refactor-flex
CLOSED: [2017-03-23 Thu 18:28]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 18:28
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE start a new scss file for all flex
CLOSED: [2017-03-23 Thu 17:13]
** DONE port all old flex (for messages) to that file
CLOSED: [2017-03-23 Thu 17:13]
** DONE turn off absolute elements
CLOSED: [2017-03-23 Thu 17:28]
** DONE get the alignment correct
CLOSED: [2017-03-23 Thu 17:29]
** DONE start from the top reflexing
CLOSED: [2017-03-23 Thu 18:28]
** DONE cleanup
CLOSED: [2017-03-23 Thu 18:28]
- uncomment overflow in messages.jsx

* DONE Address regular errors
CLOSED: [2017-03-23 Thu 20:01]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 20:01
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE conditional in receive single message
CLOSED: [2017-03-23 Thu 19:48]
** DONE Follow steps for removing standard errors
CLOSED: [2017-03-23 Thu 20:01]

* DONE weird messages bug
CLOSED: [2017-03-23 Thu 20:24]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 20:24
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
- Uncaught TypeError: Cannot read property 'messages' of undefined
** reproduce
- start a new dm
- everything looks fine, but there's an error in the console
** ideas
- could it be thorpbot?

* DONE push to heroku
CLOSED: [2017-03-23 Thu 20:24]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 20:24
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** look for bugs
*** DONE try putting a capital in the username
CLOSED: [2017-03-23 Thu 20:24]

* DONE creating a new dm returns a 500
CLOSED: [2017-03-23 Thu 22:36]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 22:36
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
- https://slack-copy.herokuapp.com/#/messages/c-3po-jason/details
- could be thorpbot trying to say hi before anything happens
  - because the server is slow
** DONE Why am I requesting all forums in messages?
CLOSED: [2017-03-23 Thu 20:43]
- don't think this is necessary
- removed
** DONE Make sure creating a new channel still works
CLOSED: [2017-03-23 Thu 20:50]
*** Only request channels when creating a new channel
** Make sure creating a new dm still works
*** trying to 'recreate' a dm returns an error
- and doesn't redirect
**** looks like the dm that's added isn't added correctly
**** looks like the logic should be different for receiving a new forum than for receiving the current forum
**** create a new action - receive_new_forum
- or does it need to be session action since it's in the current user?
*** trying to 'recreate' the dm that we were last on returns a typeerror
** Git troubles
- I had it working without errors, then pushed to Heroku and then there were errors.
- When I checked on the local copy there were errors
- I checked out the commit before the hotfix and everything was fine
- Was it not merged in correctly?
*** Working commit: c2a7817
*** I think there are problems with merging
*** This is taking me a long time and is difficult
*** I fixed the problem once, I can fix it again
*** Work on develop, reset back
*** Fix the problems again
*** merge it into master
*** don't use git flow for the merge

* DONE simple error
CLOSED: [2017-03-23 Thu 23:14]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-23 Thu 23:14
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
- when users try to visit a dm that already exists, don't create it
** throw an error if the channel is not created

* DONE simplify start new dm
CLOSED: [2017-03-24 Fri 09:16]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-24 Fri 09:16
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** remove text
** remove current user

* DONE add name
CLOSED: [2017-03-24 Fri 09:29]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-24 Fri 09:29
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** DONE Replace capital user name with "Thorp Chat"
CLOSED: [2017-03-24 Fri 09:22]
** package.json
** application.html.erb
** do a search for "slack-clone"

* DONE add logo
CLOSED: [2017-03-24 Fri 10:04]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-24 Fri 10:04
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:

* DONE add favicon
CLOSED: [2017-03-24 Fri 10:16]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-24 Fri 10:16
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:

* 500 error
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-24 Fri 13:17
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:END:
- why is there an error thrown every time a new dm is created?
** The error
*** Reproducing
- Add a new DM
- In the console it says there's a 500 error
- The logs say
  Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.6ms)
ActionView::Template::Error (undefined method `id' for nil:NilClass):
1: json.extract! @forum, :id, :name, :kind, :topic, :greeting, :members, :messages
- The url changes correctly, but the page content remains that of the last forum
- The direct messages list for the user changes correctly. This means that "receive new direct message" the session action is firing just fine. The problem must be with "receive single forum" the forums action or view
** Questions
*** Can I reproduce the bug?
**** Maybe if I put a sleep on the forum show page
- This delays page rendering, but doesn't throw and error
- Interestingly, it delays the rendering of the new DM form. Why is that? That forum shouldn't have to request the forum show page
**** Why is the dm create page requesting the forum show page?
- Hmm, it looks like the dm create page is not actually requesting the forum show page
- Then why did it delay when I put on a sleep?
**** Reproduced!
***** The log
(0.1ms)  BEGIN
  Forum Load (14.0ms)  SELECT  "forums".* FROM "forums" WHERE "forums"."name" = $1 LIMIT $2  [["name", "abbot-calvin"], ["LIMIT", 1]]
  Forum Exists (2.5ms)  SELECT  1 AS one FROM "forums" WHERE "forums"."name" = $1 LIMIT $2  [["name", "abbot-calvin"], ["LIMIT", 1]]
  SQL (2.0ms)  INSERT INTO "forums" ("name", "kind", "topic", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["name", "abbot-calvin"], ["kind", "direct_message"], ["topic", "The direct message history between abbot and calvin."], ["created_at", 2017-03-24 12:38:57 UTC], ["updated_at", 2017-03-24 12:38:57 UTC]]
  Rendering api/forums/show.json.jbuilder
  Rendered api/forums/show.json.jbuilder (15.6ms)
   (16.0ms)  COMMIT
Completed 500 Internal Server Error in 87ms (ActiveRecord: 23.0ms)


DEPRECATION WARNING: #original_exception is deprecated. Use #cause instead. (called from initialize at /Users/Jason/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/better_errors-2.1.1/lib/better_errors/raised_exception.rb:7)
DEPRECATION WARNING: #original_exception is deprecated. Use #cause instead. (called from initialize at /Users/Jason/.rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/better_errors-2.1.1/lib/better_errors/raised_exception.rb:8)

NoMethodError - undefined method `id' for nil:NilClass:
  jbuilder (2.6.3) lib/jbuilder.rb:260:in `block in _extract_method_values'
  jbuilder (2.6.3) lib/jbuilder.rb:260:in `_extract_method_values'
  jbuilder (2.6.3) lib/jbuilder.rb:219:in `extract!'
  app/views/api/forums/show.json.jbuilder:1:in `_app_views_api_forums_show_json_jbuilder__2632868998246128355_70289861532440'
***** Notes
- it's hard to reproduce this reliably, but this looks like the same error
- it seems that the new forum object is not being returned correctly
- I think that the problem is not with rendering the forum show page but with /receiving/ new forum information
*** If not
**** Can I find every call to the view show page?
*** Log every time that new forums should be received
- Look for the empty one
- Now the bug won't reproduce itself :-(
*** There are two places this could be coming from
- Session reducer 'receive new dm'
- forums reducer 'receive single forum'
- Not seeing any problems here, but the bug isn't being tripped
*** Check the times when view is called
**** in messages.jsx
***** Is there a time when a new currentForum is passed in, but a request for details is not being made?
- It appears there might be
- When console logging newProps and this.props (componenetWillReceiveProps) I notice that there is a time where a new forum has been passed in but this.props has not been updated
****** Try updating in that case
**** I've found an unexpected place where requestSingleForum is called!
- In the forum details component
***** Disable this for now
***** Try pushing to heroku and see if this solves the problem
*** Disable details
- While doing this, I see that after going to a new dm the messages are not being loaded (ie the original bug)
- So I added back a line of code I had deleted yesterday while debugging. It requests the forum details from the param after loading
*** Didn't solve the problem
- Details is now disabled
- But I'm still getting the server error
- Same error in the logs
- I think this may solve the error that bots were messaging twice, though (since the forum show page was being called twice)
*** I notice one possibly related bug in my local copy
- The users number is not updating immediately
- Maybe a receiving props thing?
- Could it be the old misalignment I found above?
*** Console log all the things in Heroku to see what's happening
- It appears that after the new dm creation, the url is redirected, but the new forum never shows up in props
- This is different from my local version, in which the new forum does show up in props
** Day two
*** Can I run production server in development?
- Tried to configure this, but was unable to set up the db
*** Would printing the state of @forum in the forums_controller show more about the error?
**** Looks like the error was thrown before @create was ever called
**** Soooo, something is trying to show the forum before it has been created...
***** Ways to show forum
- Controller direct to 'api/forums/show
- Action calls that in ajax
  - 'fetchSingleForum'
  - The only action that calls that is requestSingleForum
***** Track down all of the things that are showing the forum
****** trace
017-03-24T18:48:48.876672+00:00 app[web.1]: I, [2017-03-24T18:48:48.876576 #4]  INFO -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f] Started POST "/api/forums" for 66.162.144.78 at 2017-03-24 18:48:48 +0000
2017-03-24T18:48:48.877747+00:00 app[web.1]: I, [2017-03-24T18:48:48.877681 #4]  INFO -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f] Processing by Api::ForumsController#create as JSON
2017-03-24T18:48:48.877839+00:00 app[web.1]: I, [2017-03-24T18:48:48.877763 #4]  INFO -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]   Parameters: {"forum"=>{"current_user"=>"marykate", "other_users"=>["clack"]}}
2017-03-24T18:48:48.879159+00:00 app[web.1]: <ActionController::Parameters {"current_user"=>"marykate", "other_users"=>["clack"]} permitted: true>
2017-03-24T18:48:48.879617+00:00 app[web.1]: I, [2017-03-24T18:48:48.878160 #4]  INFO -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff] Started GET "/api/forums/clack-marykate" for 66.162.144.78 at 2017-03-24 18:48:48 +0000
2017-03-24T18:48:48.880313+00:00 app[web.1]: I, [2017-03-24T18:48:48.880260 #4]  INFO -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff] Processing by Api::ForumsController#show as JSON
2017-03-24T18:48:48.880365+00:00 app[web.1]: I, [2017-03-24T18:48:48.880321 #4]  INFO -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff]   Parameters: {"name"=>"clack-marykate"}
2017-03-24T18:48:48.881601+00:00 app[web.1]: D, [2017-03-24T18:48:48.881535 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]   User Load (0.7ms)  SELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2  [["username", "marykate"], ["LIMIT", 1]]
2017-03-24T18:48:48.882986+00:00 app[web.1]: D, [2017-03-24T18:48:48.882926 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]   User Load (0.7ms)  SELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2  [["username", "clack"], ["LIMIT", 1]]
2017-03-24T18:48:48.883518+00:00 app[web.1]: --------------------DEBUGGING: @forum after initialization in create#<Forum id: nil, name: nil, kind: nil, topic: nil, greeting: nil, created_at: nil, updated_at: nil>
2017-03-24T18:48:48.883962+00:00 app[web.1]: ----------------------------------------DEBUGGING: @forum after configure_dm, before save in create#<Forum id: nil, name: "clack-marykate", kind: "direct_message", topic: "The direct message history between clack and maryk...", greeting: nil, created_at: nil, updated_at: nil>
2017-03-24T18:48:48.884670+00:00 app[web.1]: --------------------D, [2017-03-24T18:48:48.884596 #4] DEBUG -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff]   Forum Load (1.1ms)  SELECT  "forums".* FROM "forums" WHERE "forums"."name" = $1 LIMIT $2  [["name", "clack-marykate"], ["LIMIT", 1]]
2017-03-24T18:48:48.885568+00:00 app[web.1]: --------------------DEBUGGING: @forum after initialization in shownilD, [2017-03-24T18:48:48.884771 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]    (0.7ms)  BEGIN
2017-03-24T18:48:48.886696+00:00 app[web.1]:
2017-03-24T18:48:48.887369+00:00 app[web.1]: --------------------I, [2017-03-24T18:48:48.887300 #4]  INFO -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff]   Rendering api/forums/show.json.jbuilder
2017-03-24T18:48:48.888051+00:00 app[web.1]: D, [2017-03-24T18:48:48.887973 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]   Forum Exists (1.3ms)  SELECT  1 AS one FROM "forums" WHERE "forums"."name" = $1 LIMIT $2  [["name", "clack-marykate"], ["LIMIT", 1]]
2017-03-24T18:48:48.889617+00:00 app[web.1]: I, [2017-03-24T18:48:48.888401 #4]  INFO -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff]   Rendered api/forums/show.json.jbuilder (1.0ms)
2017-03-24T18:48:48.889830+00:00 app[web.1]: I, [2017-03-24T18:48:48.889766 #4]  INFO -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff] Completed 500 Internal Server Error in 9ms (ActiveRecord: 2.0ms)
2017-03-24T18:48:48.890714+00:00 app[web.1]: F, [2017-03-24T18:48:48.890648 #4] FATAL -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff]
2017-03-24T18:48:48.890863+00:00 app[web.1]: F, [2017-03-24T18:48:48.890799 #4] FATAL -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff] ActionView::Template::Error (undefined method `id' for nil:NilClass):
2017-03-24T18:48:48.891018+00:00 app[web.1]: F, [2017-03-24T18:48:48.890960 #4] FATAL -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff]     1: json.extract! @forum, :id, :name, :kind, :topic, :greeting, :members, :messages
2017-03-24T18:48:48.891021+00:00 app[web.1]: [a3f12055-4499-4afe-b6c9-d682d10ee2ff]     3: # NOTE: Keys will be camel case (createdAt) due to Jbuilder.key_format in
2017-03-24T18:48:48.891022+00:00 app[web.1]: [a3f12055-4499-4afe-b6c9-d682d10ee2ff]     4: # application.rb
2017-03-24T18:48:48.891020+00:00 app[web.1]: [a3f12055-4499-4afe-b6c9-d682d10ee2ff]     2:
2017-03-24T18:48:48.891072+00:00 app[web.1]: F, [2017-03-24T18:48:48.891011 #4] FATAL -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff]
2017-03-24T18:48:48.891952+00:00 app[web.1]: D, [2017-03-24T18:48:48.891231 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]   SQL (1.7ms)  INSERT INTO "forums" ("name", "kind", "topic", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["name", "clack-marykate"], ["kind", "direct_message"], ["topic", "The direct message history between clack and marykate."], ["created_at", 2017-03-24 18:48:48 UTC], ["updated_at", 2017-03-24 18:48:48 UTC]]
2017-03-24T18:48:48.892274+00:00 app[web.1]: F, [2017-03-24T18:48:48.891300 #4] FATAL -- : [a3f12055-4499-4afe-b6c9-d682d10ee2ff] app/views/api/forums/show.json.jbuilder:1:in `_app_views_api_forums_show_json_jbuilder___3904639204538920616_70255664189720'
2017-03-24T18:48:48.892542+00:00 app[web.1]: I, [2017-03-24T18:48:48.891878 #4]  INFO -- : [ca36b39b-4562-424f-b49d-166a8e6e0250] Started GET "/api/users" for 66.162.144.78 at 2017-03-24 18:48:48 +0000
2017-03-24T18:48:48.893249+00:00 app[web.1]: I, [2017-03-24T18:48:48.893185 #4]  INFO -- : [ca36b39b-4562-424f-b49d-166a8e6e0250] Processing by Api::UsersController#index as JSON
2017-03-24T18:48:48.893837+00:00 app[web.1]: I, [2017-03-24T18:48:48.893779 #4]  INFO -- : [ca36b39b-4562-424f-b49d-166a8e6e0250]   Rendering api/users/index.json.jbuilder
2017-03-24T18:48:48.894211+00:00 app[web.1]: D, [2017-03-24T18:48:48.894162 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]    (1.9ms)  COMMIT
2017-03-24T18:48:48.896021+00:00 app[web.1]: D, [2017-03-24T18:48:48.895969 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]    (0.5ms)  BEGIN
2017-03-24T18:48:48.897114+00:00 app[web.1]: D, [2017-03-24T18:48:48.897059 #4] DEBUG -- : [ca36b39b-4562-424f-b49d-166a8e6e0250]   User Load (1.4ms)  SELECT "users".* FROM "users"
2017-03-24T18:48:48.902145+00:00 app[web.1]: I, [2017-03-24T18:48:48.902056 #4]  INFO -- : [ca36b39b-4562-424f-b49d-166a8e6e0250]   Rendered api/users/index.json.jbuilder (8.2ms)
2017-03-24T18:48:48.902353+00:00 app[web.1]: I, [2017-03-24T18:48:48.902300 #4]  INFO -- : [ca36b39b-4562-424f-b49d-166a8e6e0250] Completed 200 OK in 9ms (Views: 7.2ms | ActiveRecord: 1.4ms)
2017-03-24T18:48:48.912890+00:00 app[web.1]: D, [2017-03-24T18:48:48.912803 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]   User Load (0.7ms)  SELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2  [["id", 378], ["LIMIT", 1]]
2017-03-24T18:48:48.916314+00:00 app[web.1]: D, [2017-03-24T18:48:48.916248 #4] DEBUG -- : [d8846394-1b18-4e6e-a3cd-210a15c1f16f]   Membership Exists (0.9ms)  SELECT  1 AS one FROM "memberships" WHERE "memberships"."forum_id" = $1 AND "memberships"."membershipable_type" = 'User' AND "memberships"."membershipable_id" = 378 LIMIT $2  [["forum_id", 478], ["LIMIT", 1]]
****** notes
******* something is calling show before it has finished being created
***** all the places where requestSingleForum shows up
HASHHISTORYPUSH!!!
*** I now understand the problem
- The form starts creating a forum
- It form redirects to the messages page (the forum show page)
- That forum doesn't exist yet
- The messages page requests that forum
- It throws an error
*** Ways to solve it
**** Controller
- If @forum isn't found, don't render it
**** Views
- Don't query when component mounts
*** Modify controller
**** Render okay even if Forum is not found in forum show
**** Add hash history push back in
**** Make sure it works in develop
**** Probably need to add another request for data on frontend
*** Notes after first attempt
**** the error is gone, which is amazing
**** but the content of the page is never loading
**** I don't think that it will ever come in as future props, but maybe I can make that happen
***** Add a then action to the thunk
*** Second attempt
**** CNCL Dispatch a new action
***** It should hash history push after it is done
***** Aaaaah I already did have a new action. I was modifying the wrong one :-(
**** DONE Add hash history push in the action addDirectMessage
CLOSED: [2017-03-24 Fri 12:58]
**** DONE Remove it from handleCreateForum
CLOSED: [2017-03-24 Fri 12:58]
**** DONE Add sleep to forum creation as a test
CLOSED: [2017-03-24 Fri 12:58]
- it redirects correctly!
*** Results
It works
** Takeaways
*** Careful with hashHistory.push
- It was the combination of making a db call, changing urls, and then requesting the results of that db call that lead me down this path
- If I had kept hashHistory.push to the thunk actions and not the react components, then I would have avoided this
- Ask the question: "what happens if this db request takes forever." Expect that it will.
*** If I had only
- tried adding a sleep function to the right controller (forums create, not forums show) then I would have been able to reproduce the error locally
** Cleanup
*** remove print statement from forums_controller
*** remove console.log session_reducer
*** remove console.log forums_reducer

* DONE remove lingering print statements
CLOSED: [2017-03-24 Fri 13:27]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-24 Fri 13:27
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:

* DONE alphabetize
CLOSED: [2017-03-24 Fri 13:42]
:PROPERTIES:
:ARCHIVE_TIME: 2017-03-24 Fri 13:43
:ARCHIVE_FILE: ~/Created/Projects/aa-projects/fullstack/slack-clone-development-notes/todos.org
:ARCHIVE_CATEGORY: todos
:ARCHIVE_TODO: DONE
:END:
** channel
** dms
